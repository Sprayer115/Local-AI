---
# Playbook zur Installation und Konfiguration von Ollama

- name: Ollama Installation und Konfiguration
  hosts: llm_servers
  become: true

  vars:
    ollama_version: latest
    ollama_data_dir: "/var/lib/ollama"
    ollama_port: 11434

  tasks:
    - name: Überprüfen, ob Docker installiert ist
      command: which docker
      register: docker_check
      ignore_errors: true
      changed_when: false

    - name: Fehler ausgeben, wenn Docker nicht installiert ist
      fail:
        msg: "Docker ist nicht installiert. Bitte führen Sie zuerst das Docker-Playbook aus."
      when: docker_check.rc != 0

    - name: Sicherstellen, dass das Ollama-Datenverzeichnis existiert
      file:
        path: "{{ ollama_data_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Ollama-Image herunterladen
      docker_image:
        name: "ollama/ollama:{{ ollama_version }}"
        source: pull
        force_source: yes

    - name: Ollama-Container erstellen und starten
      docker_container:
        name: ollama
        image: "ollama/ollama:{{ ollama_version }}"
        state: started
        restart_policy: always
        ports:
          - "{{ ollama_port }}:11434"
        volumes:
          - "{{ ollama_data_dir }}:/root/.ollama"
        env:
          OLLAMA_HOST: "0.0.0.0"

    - name: Warten bis Ollama API verfügbar ist
      uri:
        url: "http://localhost:{{ ollama_port }}"
        status_code: 200
        timeout: 5
      register: result
      until: result.status == 200
      retries: 12
      delay: 5
      ignore_errors: true

    - name: Status des Ollama-Dienstes überprüfen
      command: docker ps -f name=ollama --format '{% raw %}{{.Status}}{% endraw %}'
      register: ollama_status
      changed_when: false

    - name: Ollama-Status anzeigen
      debug:
        msg: "Ollama-Status: {{ ollama_status.stdout }}"
